{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { projectFirestore } from \"../firebase/config\";\n\nconst useFirestore = collection => {\n  _s();\n\n  const [allNotes, setAllNotes] = useState([]);\n  useEffect(() => {\n    let unsub = projectFirestore.collection(collection).orderBy(\"createdAt\", \"desc\").onSnapshot(snap => {\n      let documents = [];\n      snap.forEach(doc => {\n        documents.push({ ...doc.data(),\n          id: doc.id\n        });\n      });\n      setAllNotes(documents);\n    });\n    return () => unsub();\n  }, [collection]); // console.log(notes);\n\n  return {\n    allNotes\n  };\n};\n\n_s(useFirestore, \"47LRSCjGrWIJG7uWyN1fbzyuhEU=\");\n\nexport default useFirestore;","map":{"version":3,"sources":["/Users/syedmuzzammilhassanabedi/Desktop/ever-note-main/src/hooks/useFirestore.js"],"names":["useEffect","useState","projectFirestore","useFirestore","collection","allNotes","setAllNotes","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,MAAMC,YAAY,GAAIC,UAAD,IAAgB;AAAA;;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,KAAK,GAAGL,gBAAgB,CACzBE,UADS,CACEA,UADF,EAETI,OAFS,CAED,WAFC,EAEY,MAFZ,EAGTC,UAHS,CAGGC,IAAD,IAAU;AACpB,UAAIC,SAAS,GAAG,EAAhB;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAcC,GAAD,IAAS;AACpBF,QAAAA,SAAS,CAACG,IAAV,CAAe,EACb,GAAGD,GAAG,CAACE,IAAJ,EADU;AAEbC,UAAAA,EAAE,EAAEH,GAAG,CAACG;AAFK,SAAf;AAID,OALD;AAMAV,MAAAA,WAAW,CAACK,SAAD,CAAX;AACD,KAZS,CAAZ;AAaA,WAAO,MAAMJ,KAAK,EAAlB;AACD,GAfQ,EAeN,CAACH,UAAD,CAfM,CAAT,CAHmC,CAmBnC;;AACA,SAAO;AAAEC,IAAAA;AAAF,GAAP;AACD,CArBD;;GAAMF,Y;;AAuBN,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { projectFirestore } from \"../firebase/config\";\n\nconst useFirestore = (collection) => {\n  const [allNotes, setAllNotes] = useState([]);\n\n  useEffect(() => {\n    let unsub = projectFirestore\n      .collection(collection)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snap) => {\n        let documents = [];\n        snap.forEach((doc) => {\n          documents.push({\n            ...doc.data(),\n            id: doc.id,\n          });\n        });\n        setAllNotes(documents);\n      });\n    return () => unsub();\n  }, [collection]);\n  // console.log(notes);\n  return { allNotes };\n};\n\nexport default useFirestore;\n"]},"metadata":{},"sourceType":"module"}