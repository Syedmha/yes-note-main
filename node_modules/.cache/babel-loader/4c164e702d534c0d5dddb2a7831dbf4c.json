{"ast":null,"code":"var _jsxFileName = \"/Users/syedmuzzammilhassanabedi/Documents/GitHub/yes-note-main/src/editor/editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\nimport { projectFirestore } from \"../firebase/config\";\nimport useDebounce from \"../helper\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editor = ({\n  classes,\n  note\n}) => {\n  _s();\n\n  const [editorNoteTitle, setEditorNoteTitle] = useState(note.selectedNote.title);\n  const [editorNoteBody, setEditorNoteBody] = useState(note.selectedNote.body);\n  const updateBodyDebounce = useDebounce(editorNoteBody, 1500);\n  const updateTitleDebounce = useDebounce(editorNoteTitle, 1500);\n  useEffect(() => {\n    setEditorNoteTitle(note.selectedNote.title);\n  }, [note.selectedNote]);\n  useEffect(() => {\n    setEditorNoteBody(note.selectedNote.body);\n  }, [note.selectedNote]);\n  useEffect(() => {\n    if (updateBodyDebounce) {\n      projectFirestore.collection(\"notes\").doc(note.selectedNote.id).update({\n        body: editorNoteBody\n      });\n    }\n  }, [updateBodyDebounce, editorNoteBody, note.selectedNote.id]);\n  useEffect(() => {\n    projectFirestore.collection(\"notes\").doc(note.selectedNote.id).update({\n      title: editorNoteTitle\n    });\n  }, [updateTitleDebounce, note.selectedNote.id, editorNoteTitle]);\n\n  const updateNote = text => {\n    setEditorNoteBody(text);\n  };\n\n  const updateTitle = e => {\n    setEditorNoteTitle(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.editorContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.editorHeader,\n      children: [/*#__PURE__*/_jsxDEV(BorderColorIcon, {\n        className: classes.editIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.titleInput,\n        type: \"text\",\n        value: editorNoteTitle,\n        placeholder: \"Note title...\",\n        onChange: updateTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      id: \"quill\",\n      onChange: updateNote,\n      value: editorNoteBody // modules={modules}\n      // formats={formats}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Editor, \"NQIpJ9XeMEwXcReJLFa3levUmGA=\", false, function () {\n  return [useDebounce, useDebounce];\n});\n\n_c = Editor;\nexport default withStyles(styles)(Editor);\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/syedmuzzammilhassanabedi/Documents/GitHub/yes-note-main/src/editor/editor.js"],"names":["React","useEffect","useState","ReactQuill","withStyles","styles","projectFirestore","useDebounce","BorderColorIcon","Editor","classes","note","editorNoteTitle","setEditorNoteTitle","selectedNote","title","editorNoteBody","setEditorNoteBody","body","updateBodyDebounce","updateTitleDebounce","collection","doc","id","update","updateNote","text","updateTitle","e","target","value","editorContainer","editorHeader","editIcon","titleInput"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\nimport { projectFirestore } from \"../firebase/config\";\nimport useDebounce from \"../helper\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\n\nconst Editor = ({ classes, note }) => {\n  const [editorNoteTitle, setEditorNoteTitle] = useState(\n    note.selectedNote.title\n  );\n  const [editorNoteBody, setEditorNoteBody] = useState(note.selectedNote.body);\n  const updateBodyDebounce = useDebounce(editorNoteBody, 1500);\n  const updateTitleDebounce = useDebounce(editorNoteTitle, 1500);\n\n  useEffect(() => {\n    setEditorNoteTitle(note.selectedNote.title);\n  }, [note.selectedNote]);\n\n  useEffect(() => {\n    setEditorNoteBody(note.selectedNote.body);\n  }, [note.selectedNote]);\n\n  useEffect(() => {\n    if (updateBodyDebounce) {\n      projectFirestore\n        .collection(\"notes\")\n        .doc(note.selectedNote.id)\n        .update({\n          body: editorNoteBody,\n        });\n    }\n  }, [updateBodyDebounce, editorNoteBody, note.selectedNote.id]);\n\n  useEffect(() => {\n    projectFirestore\n      .collection(\"notes\")\n      .doc(note.selectedNote.id)\n      .update({\n        title: editorNoteTitle,\n      });\n  }, [updateTitleDebounce, note.selectedNote.id, editorNoteTitle]);\n\n  const updateNote = (text) => {\n    setEditorNoteBody(text);\n  };\n  const updateTitle = (e) => {\n    setEditorNoteTitle(e.target.value);\n  };\n\n\n  return (\n    <div className={classes.editorContainer}>\n      <div className={classes.editorHeader}>\n        <BorderColorIcon className={classes.editIcon} />\n\n        <input\n          className={classes.titleInput}\n          type=\"text\"\n          value={editorNoteTitle}\n          placeholder=\"Note title...\"\n          onChange={updateTitle}\n        />\n      </div>\n      <ReactQuill\n        id=\"quill\"\n        onChange={updateNote}\n        value={editorNoteBody}\n        // modules={modules}\n        // formats={formats}\n      ></ReactQuill>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Editor);\n"]},"metadata":{},"sourceType":"module"}